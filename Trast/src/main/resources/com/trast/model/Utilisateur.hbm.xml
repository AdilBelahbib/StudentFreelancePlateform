<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Dec 8, 2015 8:15:05 PM by Hibernate Tools 3.5.0.Final -->
<hibernate-mapping package="com.trast.model">
	<class name="Utilisateur" table="UTILISATEUR">
		<id name="id" type="java.lang.Long">
			<column name="ID" />
			<generator class="native" />
		</id>
		<discriminator column="typeUtilisateur" type="string" />
		<property name="email" type="java.lang.String">
			<column name="EMAIL" />
		</property>
		<property name="motDePasse" type="java.lang.String">
			<column name="MOTDEPASSE" />
		</property>
		<set name="fichiers" table="FICHIER" inverse="false" lazy="false">
			<key>
				<column name="idUtilisateur" />
			</key>
			<one-to-many class="Fichier" />
		</set>
		<set name="adresses" table="ADRESSE" inverse="true" lazy="false" cascade="all">
			<key>
				<column name="idUtilisateur" />
			</key>
			<one-to-many class="Adresse" />
		</set>
		
		<many-to-one name="roleUtilisateur" class="RoleUtilisateur" fetch="join" lazy="false">
            <column name="idrole" />
        </many-to-one>

		<!-- La sous-classe Entreprise -->
		<subclass name="Entreprise" discriminator-value="ENT">
			<set name="appelOffres" table="appel_offre" inverse="true" lazy="false">
				<key>
					<column name="idEntreprise" />
				</key>
				<one-to-many class="AppelOffre" />
			</set>
			
			<set name="projets" table="projet" inverse="true" lazy="false">
				<key>
					<column name="idEntreprise" />
				</key>
				<one-to-many class="Projet" />
			</set>
			
			<set name="secteurActivites" table="secteur_activite" inverse="false"
				lazy="false">
				<key>
					<column name="idEntreprise" />
				</key>
				<element type="java.lang.String">
					<column name="secteur" />
				</element>
			</set>

			<join table="entreprise">
				<key column="id" />

				<property name="sigle" type="java.lang.String">
					<column name="SIGLE" />
				</property>
				<property name="apercu" type="java.lang.String">
					<column name="APERCU" />
				</property>

				<property name="etatCompte" column="etatCompte">
					<type name="org.hibernate.type.EnumType">
						<param name="enumClass">com.trast.model.EtatCompte</param>
						<param name="useNamed">true</param>
					</type>
				</property>
			</join>
		</subclass>

		<!-- La sous-classe Particulier -->
		<subclass name="Particulier" discriminator-value="P">

			<join table="particulier">
				<key column="id" />
				<property name="dateNaissance" type="java.util.Date">
					<column name="DATENAISSANCE" />
				</property>
				<property name="nom" type="java.lang.String">
					<column name="NOM" />
				</property>
				<property name="prenom" type="java.lang.String">
					<column name="PRENOM" />
				</property>
			</join>

			<!-- La sous-classe Etudiant -->
			<subclass name="Etudiant" discriminator-value="ETU">

				<set name="niveaux" table="etudiant_competence" inverse="true"
					lazy="true" cascade="all">
					<key>
						<column name="idEtudiant" />
					</key>
					<one-to-many class="Niveau" />
				</set>

				<set name="qualifications" table="QUALIFICATION" inverse="true"
					lazy="false" cascade="all">
					<key>
						<column name="idEtudiant" />
					</key>
					<one-to-many class="Qualification" />
				</set>

				<set name="contrePropositions" table="contre_proposition"
					inverse="true" lazy="false" cascade="all" >
					<key>
						<column name="idEtudiant" />
					</key>
					<one-to-many class="ContreProposition" />
				</set>

				<set name="projets" table="PROJET" inverse="true" lazy="false"
					access="field">
					<key>
						<column name="idEtudiant" />
					</key>
					<one-to-many class="Projet" />
				</set>

				<join table="etudiant">
					<key column="id" />

					<property name="nombreBids" type="int">
						<column name="NOMBREBIDS" />
					</property>
				</join>
			</subclass>

			<subclass name="Administrateur" discriminator-value="ADM"></subclass>

		</subclass>
	</class>
</hibernate-mapping>